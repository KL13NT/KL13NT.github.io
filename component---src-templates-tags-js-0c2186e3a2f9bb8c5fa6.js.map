{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/PostList.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_PostList__WEBPACK_IMPORTED_MODULE_3__","Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","a","createElement","to","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","PostList","className","map","_ref2","frontmatter","languageClass","lang","path","title","description","date","Math","ceil","parseInt","length","tags","key"],"mappings":"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","file":"component---src-templates-tags-js-0c2186e3a2f9bb8c5fa6.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\n\r\nimport { PostList } from \"../components/PostList\";\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`;\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>{tagHeader}</h1>\r\n        <PostList edges={edges}/>\r\n        <Link to=\"/tags\">All tags</Link>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            description\r\n            author\r\n            length\r\n            lang\r\n            ogImageName\r\n            ogImageExtension\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {children}\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n\r\n\r\nexport const PostList = ({ edges })=>\r\n  <ul className='c-postList'>\r\n    {\r\n      edges.map(({ node: { frontmatter } }) => {\r\n        const languageClass = frontmatter.lang === 'ar' ? 'rightToLeft' : null\r\n        return (\r\n        <>\r\n          <li className={languageClass}>\r\n            <Link to={frontmatter.path}>{frontmatter.title}</Link>\r\n            <p className={languageClass}>{frontmatter.description}</p>\r\n            {frontmatter.lang === 'ar' ? (\r\n              <h5>\r\n                نشر في {frontmatter.date},{' '}\r\n                {Math.ceil(parseInt(frontmatter.length) / 150)} دقائق من القرائة\r\n              </h5>\r\n            ) : (\r\n              <h5>\r\n                Posted {frontmatter.date},{' '}\r\n                {Math.ceil(parseInt(frontmatter.length) / 150)} min read\r\n              </h5>\r\n            )}\r\n            {frontmatter.tags ? (\r\n              <ul className=\"o-tagsContainer\">\r\n                {frontmatter.tags.map(tag => (\r\n                  <li key={tag}>\r\n                    <Link to={`tags/${tag}`}>{tag}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : null}\r\n          </li>\r\n        </>\r\n        )\r\n      })}\r\n  </ul>"],"sourceRoot":""}