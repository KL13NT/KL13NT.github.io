{"version":3,"sources":["webpack:///./src/templates/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","edges","pageContext","a","createElement","title","description","lang","style","width","margin","map","node","Fragment","console","log","to","frontmatter","path","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","SEO","meta","site","_public_static_d_1058648143_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-templates-index-js-82ac83cc2dd38c813f35.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport './index.css'\r\n\r\nexport default ({ pageContext: {edges} }) => {\r\n  // console.log(edges)\r\n  // console.log(node)\r\n  return (\r\n  <Layout>\r\n    <SEO title=\"Nabil Tharwat - Blog\" description=\"Welcome to my blog! I post technically helpful stuff!\" lang=\"en-gb\"/>\r\n    <header>\r\n      <h1>NABIL THARWAT</h1>\r\n      <p>I really like JavaScript.</p>\r\n      <p>Find some lovely blog posts about it and programming in general below!</p>\r\n      <hr style={{width: '30%', margin: '3rem auto 5rem auto'}}/>\r\n    </header>\r\n    <ul>\r\n      {edges.map( node =>\r\n        <>\r\n        {console.log(node)}\r\n          <li><Link to={node.node.frontmatter.path}><h1>{node.node.frontmatter.title}</h1></Link></li>\r\n          <p>{node.node.frontmatter.description}</p>\r\n        </>\r\n      )}\r\n    </ul>\r\n  </Layout>\r\n  )\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <main>{children}</main>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      } \r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}