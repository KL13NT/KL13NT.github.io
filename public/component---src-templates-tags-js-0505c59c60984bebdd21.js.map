{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/PostList.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","description","path","title","about","home","pageQuery","PostList","className","map","node","frontmatter","fields","languageClass","lang","time","Math","ceil","readingTime","minutes","key","to","introduction","date","tags","random"],"mappings":"2FAAA,iHAgCeA,UAtBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpBC,EAAQF,EAARE,IAD+B,EAETD,EAAKE,kBAA3BC,EAF+B,EAE/BA,MAAOC,EAFwB,EAExBA,WAETC,EAAS,sBAA0BJ,EAA1B,IACTK,EAAkBF,EAAP,SAA0C,IAAfA,EAAmB,GAAK,KAAnD,iBAAyEH,EAAzE,IAEjB,OACC,oCACC,kBAAC,IAAD,CAAKK,YAAcA,EAAcC,KAAI,SAAYN,EAAQO,MAAQH,IACjE,kBAAC,IAAD,CAAQI,OAAQ,EAAOC,MAAO,IAC9B,kBAAC,IAAD,KACC,6BACC,4BAAML,GACN,2BAAKC,GACL,kBAAC,IAAD,CAAUH,MAAQA,QAShB,IAAMQ,EAAS,c,iCClCtB,8DAKaC,EAAW,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OACvB,wBAAIU,UAAU,cAEZV,EAAMW,KAAI,YAAwC,IAAD,IAApCC,KAAQC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,OAC3BC,EAAqC,OAArBF,EAAYG,KAAgB,gBAAkB,KAC9DC,EAAOC,KAAKC,KAAKL,EAAOM,YAAYC,SAE1C,OACC,wBAAIC,IAAMT,EAAYR,OACrB,kBAAC,OAAD,CAAMiB,IAAMT,EAAYR,MAAQK,UAAY,iBAAmBa,GAAKV,EAAYT,MAC/E,wBAAIM,UAAYK,GAAkBF,EAAYR,QAE/C,uBAAGK,UAAYK,GAAkBF,EAAYW,cAAgBX,EAAYV,aACzE,yCAAgBU,EAAYY,KAA5B,MAAuCR,EAAvC,cAECJ,EAAYa,KAEV,yBAAKhB,UAAU,mBAEbG,EAAYa,KAAKf,KAAI,SAAAb,GAAG,OACvB,kBAAC,OAAD,CAAMwB,IAAMxB,EAAMoB,KAAKS,SAAWjB,UAAU,iBAAiBa,GAAE,QAAWzB,GAAUA,OAKtF","file":"component---src-templates-tags-js-0505c59c60984bebdd21.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\n\nimport Layout from '../components/layout'\nimport Navbar from '../components/Navbar'\nimport SEO from '../components/SEO'\n\nimport { PostList } from '../components/PostList'\n\nconst Tags = ({ pageContext, data }) => {\n\tconst { tag } = pageContext\n\tconst { edges, totalCount } = data.allMarkdownRemark\n\n\tconst tagHeader = `Posts tagged with \"${ tag }\"`\n\tconst description = `${ totalCount } post${ totalCount === 1 ? '' : 's' } tagged with \"${ tag }\"`\n\n\treturn (\n\t\t<>\n\t\t\t<SEO description={ description } path={ `/tags/${tag}` } title={ tagHeader }/>\n\t\t\t<Navbar about={ true } home={ true } />\n\t\t\t<Layout>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{ tagHeader }</h1>\n\t\t\t\t\t<p>{ description }</p>\n\t\t\t\t\t<PostList edges={ edges } />\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            description\n            author\n            length\n            lang\n            ogImageName\n            ogImageExtension\n            tags\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            readingTime {\n              minutes\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport { Link } from 'gatsby'\n\n\nexport const PostList = ({ edges }) => (\n\t<ul className='c-postList'>\n\t\t{\n\t\t\tedges.map(({ node: { frontmatter, fields } }) => {\n\t\t\t\tconst languageClass = frontmatter.lang === 'ar' ? 'u-rightToLeft' : null\n\t\t\t\tconst time = Math.ceil(fields.readingTime.minutes)\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ frontmatter.title }>\n\t\t\t\t\t\t<Link key={ frontmatter.title } className={ 'u-unstyledLink' } to={ frontmatter.path }>\n\t\t\t\t\t\t\t<h1 className={ languageClass }>{ frontmatter.title }</h1>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<p className={ languageClass }>{ frontmatter.introduction || frontmatter.description }</p>\n\t\t\t\t\t\t<span> Posted { frontmatter.date } . { time } min read </span>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfrontmatter.tags ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<div className='o-tagsContainer'>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tfrontmatter.tags.map(tag => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Link key={ tag + Math.random() } className='u-unstyledLink' to={ `tags/${tag}` }>{ tag }</Link>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t}) }\n\t</ul>\n)\n"],"sourceRoot":""}