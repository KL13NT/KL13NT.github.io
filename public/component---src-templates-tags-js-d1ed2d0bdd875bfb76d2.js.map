{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/PostList.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","pageQuery","PostList","className","map","frontmatter","node","languageClass","lang","to","path","title","description","date","Math","ceil","parseInt","length","tags","key"],"mappings":"0FAAA,gGAsBeA,UAhBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKI,GACL,kBAAC,IAAD,CAAUF,MAAOA,OAQlB,IAAMG,EAAS,c,iCCxBtB,+DAKaC,EAAW,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OACtB,wBAAIK,UAAU,cAEVL,EAAMM,KAAI,YAAgC,IAArBC,EAAoB,EAA5BC,KAAQD,YACbE,EAAqC,OAArBF,EAAYG,KAAgB,cAAgB,KAClE,OACA,oCACE,wBAAIL,UAAWI,GACb,kBAAC,IAAD,CAAME,GAAIJ,EAAYK,MAAOL,EAAYM,OACzC,uBAAGR,UAAWI,GAAgBF,EAAYO,aACpB,OAArBP,EAAYG,KACX,sCACUH,EAAYQ,KADtB,IAC6B,IAC1BC,KAAKC,KAAKC,SAASX,EAAYY,QAAU,KAF5C,qBAKA,sCACUZ,EAAYQ,KADtB,IAC6B,IAC1BC,KAAKC,KAAKC,SAASX,EAAYY,QAAU,KAF5C,aAKDZ,EAAYa,KACX,wBAAIf,UAAU,mBACXE,EAAYa,KAAKd,KAAI,SAAAR,GAAG,OACvB,wBAAIuB,IAAKvB,GACP,kBAAC,IAAD,CAAMa,GAAE,QAAUb,GAAQA,QAI9B","file":"component---src-templates-tags-js-d1ed2d0bdd875bfb76d2.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\n\r\nimport { PostList } from \"../components/PostList\";\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`;\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>{tagHeader}</h1>\r\n        <PostList edges={edges}/>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            description\r\n            author\r\n            length\r\n            lang\r\n            ogImageName\r\n            ogImageExtension\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n\r\n\r\nexport const PostList = ({ edges })=>\r\n  <ul className='c-postList'>\r\n    {\r\n      edges.map(({ node: { frontmatter } }) => {\r\n        const languageClass = frontmatter.lang === 'ar' ? 'rightToLeft' : null\r\n        return (\r\n        <>\r\n          <li className={languageClass}>\r\n            <Link to={frontmatter.path}>{frontmatter.title}</Link>\r\n            <p className={languageClass}>{frontmatter.description}</p>\r\n            {frontmatter.lang === 'ar' ? (\r\n              <h5>\r\n                نشر في {frontmatter.date},{' '}\r\n                {Math.ceil(parseInt(frontmatter.length) / 150)} دقائق من القرائة\r\n              </h5>\r\n            ) : (\r\n              <h5>\r\n                Posted {frontmatter.date},{' '}\r\n                {Math.ceil(parseInt(frontmatter.length) / 150)} min read\r\n              </h5>\r\n            )}\r\n            {frontmatter.tags ? (\r\n              <ul className=\"o-tagsContainer\">\r\n                {frontmatter.tags.map(tag => (\r\n                  <li key={tag}>\r\n                    <Link to={`tags/${tag}`}>{tag}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : null}\r\n          </li>\r\n        </>\r\n        )\r\n      })}\r\n  </ul>"],"sourceRoot":""}