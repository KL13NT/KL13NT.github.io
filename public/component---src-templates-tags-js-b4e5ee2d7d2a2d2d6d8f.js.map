{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/PostList.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","home","about","pageQuery","PostList","className","map","node","frontmatter","readingTime","fields","languageClass","lang","time","Math","floor","minutes","key","title","to","path","description","date","tags","random"],"mappings":"0FAAA,wGA4BeA,UAnBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WAETC,EAAgBD,EAAP,SAA0C,IAAfA,EAAmB,GAAK,KAAnD,iBAAyEH,EAAzE,IAEf,OACE,oCACE,kBAAC,IAAD,CAAQK,MAAM,EAAMC,OAAO,IAC3B,kBAAC,IAAD,KACE,6BACE,4BAAKF,GACL,kBAAC,IAAD,CAAUF,MAAOA,QASpB,IAAMK,EAAS,c,iCC9BtB,8DAIaC,EAAW,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAH,OACtB,wBAAIO,UAAU,cAEVP,EAAMQ,KAAI,YAAyD,IAAD,IAArDC,KAAQC,EAA6C,EAA7CA,YAAuBC,EAAsB,EAAhCC,OAAUD,YACpCE,EAAgB,OAAAH,EAAYI,KAAZ,gBAA8C,KAC9DC,EAAOC,KAAKC,MAAMN,EAAYO,SACpC,OACE,wBAAIC,IAAKT,EAAYU,OACnB,kBAAC,OAAD,CAAMC,GAAIX,EAAYY,KAAMf,UAAWM,GAAgBH,EAAYU,OACnE,uBAAGb,UAAWM,GAAgBH,EAAYa,aAC1C,uCAAab,EAAYc,KAAzB,MAAkCT,EAAlC,cAEEL,EAAYe,KAER,yBAAKlB,UAAU,mBAEXG,EAAYe,KAAKjB,KAAI,SAAAV,GAAG,OACtB,kBAAC,OAAD,CAAMuB,GAAE,QAAUvB,EAAOqB,IAAKrB,EAAMkB,KAAKU,UAAW5B,OAK1D","file":"component---src-templates-tags-js-b4e5ee2d7d2a2d2d6d8f.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\n\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Navbar from '../components/Navbar'\r\n\r\nimport { PostList } from \"../components/PostList\";\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n\r\n  const tagHeader = `${ totalCount } post${ totalCount === 1 ? \"\" : \"s\" } tagged with \"${ tag }\"`;\r\n\r\n  return (\r\n    <>\r\n      <Navbar home={true} about={true} />\r\n      <Layout>\r\n        <div>\r\n          <h1>{tagHeader}</h1>\r\n          <PostList edges={edges} />\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            description\r\n            author\r\n            length\r\n            lang\r\n            ogImageName\r\n            ogImageExtension\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n\r\nexport const PostList = ({ edges }) => (\r\n  <ul className=\"c-postList\">\r\n    {\r\n      edges.map(({ node: { frontmatter, fields: { readingTime } } }) => {\r\n        const languageClass = frontmatter.lang === `ar` ? `u-rightToLeft` : null\r\n        const time = Math.floor(readingTime.minutes)\r\n        return (\r\n          <li key={frontmatter.title}>\r\n            <Link to={frontmatter.path} className={languageClass}>{frontmatter.title}</Link>\r\n            <p className={languageClass}>{frontmatter.description}</p>\r\n            <h5> Posted {frontmatter.date} . {time} min read </h5>\r\n            {\r\n              frontmatter.tags ?\r\n                (\r\n                  <div className=\"o-tagsContainer\">\r\n                    {\r\n                      frontmatter.tags.map(tag => (\r\n                        <Link to={`tags/${tag}`} key={tag + Math.random()}>{tag}</Link>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                ) \r\n                : null\r\n            }\r\n          </li>\r\n        )\r\n      })}\r\n  </ul>\r\n)\r\n"],"sourceRoot":""}