{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/PostList.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","description","path","title","about","home","pageQuery","PostList","className","map","node","frontmatter","fields","languageClass","lang","time","Math","ceil","readingTime","minutes","key","to","date","tags","random"],"mappings":"0FAAA,iHAgCeA,UAtBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpBC,EAAQF,EAARE,IAD+B,EAETD,EAAKE,kBAA3BC,EAF+B,EAE/BA,MAAOC,EAFwB,EAExBA,WAETC,EAAS,sBAA0BJ,EAA1B,IACTK,EAAkBF,EAAP,SAA0C,IAAfA,EAAmB,GAAK,KAAnD,iBAAyEH,EAAzE,IAEjB,OACC,oCACC,kBAAC,IAAD,CAAKK,YAAcA,EAAcC,KAAI,SAAYN,EAAQO,MAAQH,IACjE,kBAAC,IAAD,CAAQI,OAAQ,EAAOC,MAAO,IAC9B,kBAAC,IAAD,KACC,6BACC,4BAAML,GACN,2BAAKC,GACL,kBAAC,IAAD,CAAUH,MAAQA,QAShB,IAAMQ,EAAS,c,iCClCtB,8DAKaC,EAAW,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OACvB,wBAAIU,UAAU,cAEZV,EAAMW,KAAI,YAAwC,IAAD,IAApCC,KAAQC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,OAC3BC,EAAqC,OAArBF,EAAYG,KAAgB,gBAAkB,KAC9DC,EAAOC,KAAKC,KAAKL,EAAOM,YAAYC,SAE1C,OACC,kBAAC,OAAD,CAAMC,IAAMT,EAAYR,MAAQK,UAAYK,EAAgB,kBAAyBQ,GAAKV,EAAYT,MACrG,wBAAIkB,IAAMT,EAAYR,OACrB,4BAAMQ,EAAYR,OAClB,uBAAGK,UAAYK,GAAkBF,EAAYV,aAC7C,yCAAgBU,EAAYW,KAA5B,MAAuCP,EAAvC,cAECJ,EAAYY,KAEV,yBAAKf,UAAU,mBAEbG,EAAYY,KAAKd,KAAI,SAAAb,GAAG,OACvB,kBAAC,OAAD,CAAMwB,IAAMxB,EAAMoB,KAAKQ,SAAWhB,UAAU,iBAAiBa,GAAE,QAAWzB,GAAUA,OAKtF","file":"component---src-templates-tags-js-41dff8d96ac9f55b08ad.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\n\r\nimport Layout from '../components/layout'\r\nimport Navbar from '../components/Navbar'\r\nimport SEO from '../components/SEO'\r\n\r\nimport { PostList } from '../components/PostList'\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n\tconst { tag } = pageContext\r\n\tconst { edges, totalCount } = data.allMarkdownRemark\r\n\r\n\tconst tagHeader = `Posts tagged with \"${ tag }\"`\r\n\tconst description = `${ totalCount } post${ totalCount === 1 ? '' : 's' } tagged with \"${ tag }\"`\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SEO description={ description } path={ `/tags/${tag}` } title={ tagHeader }/>\r\n\t\t\t<Navbar about={ true } home={ true } />\r\n\t\t\t<Layout>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>{ tagHeader }</h1>\r\n\t\t\t\t\t<p>{ description }</p>\r\n\t\t\t\t\t<PostList edges={ edges } />\r\n\t\t\t\t</div>\r\n\t\t\t</Layout>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            description\r\n            author\r\n            length\r\n            lang\r\n            ogImageName\r\n            ogImageExtension\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n          fields {\r\n            readingTime {\r\n              minutes\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport { Link } from 'gatsby'\r\n\r\n\r\nexport const PostList = ({ edges }) => (\r\n\t<ul className='c-postList'>\r\n\t\t{\r\n\t\t\tedges.map(({ node: { frontmatter, fields } }) => {\r\n\t\t\t\tconst languageClass = frontmatter.lang === 'ar' ? 'u-rightToLeft' : null\r\n\t\t\t\tconst time = Math.ceil(fields.readingTime.minutes)\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Link key={ frontmatter.title } className={ languageClass + ' ' + 'u-unstyledLink' } to={ frontmatter.path }>\r\n\t\t\t\t\t\t<li key={ frontmatter.title }>\r\n\t\t\t\t\t\t\t<h1>{ frontmatter.title }</h1>\r\n\t\t\t\t\t\t\t<p className={ languageClass }>{ frontmatter.description }</p>\r\n\t\t\t\t\t\t\t<span> Posted { frontmatter.date } . { time } min read </span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfrontmatter.tags ?\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t<div className='o-tagsContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tfrontmatter.tags.map(tag => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link key={ tag + Math.random() } className='u-unstyledLink' to={ `tags/${tag}` }>{ tag }</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)\r\n\t\t\t}) }\r\n\t</ul>\r\n)\r\n"],"sourceRoot":""}