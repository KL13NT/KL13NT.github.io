{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport SEO from '../../components/SEO';\nimport ArticleBody from '../../components/Article';\nimport { getAllSlugs, getPostBySlug } from '../../api';\n\nfunction PostTemplate({\n  html,\n  frontmatter\n}) {\n  const {\n    lang\n  } = frontmatter;\n  const languageClass = lang === 'ar' ? 'u-rightToLeft' : null;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(SEO, _objectSpread({}, frontmatter)), /*#__PURE__*/_jsx(ArticleBody, {\n      frontmatter: frontmatter,\n      html: html,\n      languageClass: languageClass\n    })]\n  });\n}\n\nexport async function getStaticProps({\n  params: {\n    slug\n  }\n}) {\n  const post = getPostBySlug(slug);\n  console.log(post);\n  return {\n    props: _objectSpread({}, post)\n  };\n}\nexport async function getStaticPaths() {\n  const paths = getAllSlugs().map(slug => ({\n    params: {\n      slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default PostTemplate;","map":null,"metadata":{},"sourceType":"module"}