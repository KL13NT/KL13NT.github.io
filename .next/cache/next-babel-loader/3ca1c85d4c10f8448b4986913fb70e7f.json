{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Maintaining\\\\iamnabil\\\\pages\\\\blog\\\\[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from 'fs';\nimport matter from 'gray-matter';\nimport React from 'react';\n\nfunction PostTemplate(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Here we'll load \\\"\", props.slug, \"\\\"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticProps({\n  params: {\n    slug\n  }\n}) {\n  const file = fs.readFileSync(`blog/${slug}`, 'utf-8');\n  const parsed = matter(file);\n  console.log(parsed.data.date, typeof parsed.data.date);\n  return {\n    props: {\n      html: parsed.content,\n      frontmatter: _objectSpread(_objectSpread({}, parsed.data), {}, {\n        date: parsed.data.date.toJSON()\n      }),\n      slug: parsed.data.path\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const paths = fs.readdirSync('blog').filter(path => path.endsWith('.md')).map(path => ({\n    params: {\n      slug: path\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default PostTemplate;","map":{"version":3,"sources":["D:/Workspace/Maintaining/iamnabil/pages/blog/[slug].js"],"names":["fs","matter","React","PostTemplate","props","slug","getStaticProps","params","file","readFileSync","parsed","console","log","data","date","html","content","frontmatter","toJSON","path","getStaticPaths","paths","readdirSync","filter","endsWith","map","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,sBAAO;AAAA,qCAAuBA,KAAK,CAACC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAEF,IAAAA;AAAF;AAAV,CAA9B,EAAoD;AAC1D,QAAMG,IAAI,GAAGR,EAAE,CAACS,YAAH,CAAiB,QAAOJ,IAAK,EAA7B,EAAgC,OAAhC,CAAb;AACA,QAAMK,MAAM,GAAGT,MAAM,CAACO,IAAD,CAArB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,IAAxB,EAA8B,OAAOJ,MAAM,CAACG,IAAP,CAAYC,IAAjD;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNW,MAAAA,IAAI,EAAEL,MAAM,CAACM,OADP;AAENC,MAAAA,WAAW,kCACPP,MAAM,CAACG,IADA;AAEVC,QAAAA,IAAI,EAAEJ,MAAM,CAACG,IAAP,CAAYC,IAAZ,CAAiBI,MAAjB;AAFI,QAFL;AAMNb,MAAAA,IAAI,EAAEK,MAAM,CAACG,IAAP,CAAYM;AANZ;AADD,GAAP;AAUA;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,KAAK,GAAGrB,EAAE,CACdsB,WADY,CACA,MADA,EAEZC,MAFY,CAELJ,IAAI,IAAIA,IAAI,CAACK,QAAL,CAAc,KAAd,CAFH,EAGZC,GAHY,CAGRN,IAAI,KAAK;AAAEZ,IAAAA,MAAM,EAAE;AAAEF,MAAAA,IAAI,EAAEc;AAAR;AAAV,GAAL,CAHI,CAAd;AAKA,SAAO;AACNE,IAAAA,KADM;AAENK,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,eAAevB,YAAf","sourcesContent":["import fs from 'fs'\nimport matter from 'gray-matter'\nimport React from 'react'\n\nfunction PostTemplate(props) {\n\treturn <div>Here we'll load \"{props.slug}\"</div>\n}\n\nexport async function getStaticProps({ params: { slug } }) {\n\tconst file = fs.readFileSync(`blog/${slug}`, 'utf-8')\n\tconst parsed = matter(file)\n\n\tconsole.log(parsed.data.date, typeof parsed.data.date)\n\n\treturn {\n\t\tprops: {\n\t\t\thtml: parsed.content,\n\t\t\tfrontmatter: {\n\t\t\t\t...parsed.data,\n\t\t\t\tdate: parsed.data.date.toJSON()\n\t\t\t},\n\t\t\tslug: parsed.data.path\n\t\t}\n\t}\n}\n\nexport async function getStaticPaths() {\n\tconst paths = fs\n\t\t.readdirSync('blog')\n\t\t.filter(path => path.endsWith('.md'))\n\t\t.map(path => ({ params: { slug: path } }))\n\n\treturn {\n\t\tpaths,\n\t\tfallback: false\n\t}\n}\n\nexport default PostTemplate\n"]},"metadata":{},"sourceType":"module"}