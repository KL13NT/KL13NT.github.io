{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Maintaining\\\\iamnabil\\\\pages\\\\uses.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport SEO from '../components/SEO';\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    },\n    __self: this\n  }), mdx(SEO, {\n    path: \"/toolset\",\n    title: \"Toolset\",\n    mdxType: \"SEO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    },\n    __self: this\n  }), mdx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Work and Experiments`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    },\n    __self: this\n  }, `This is a list of all the tools I'm actively using, have used before, or have learned but haven't had the chance to use in a real world project yet. I currently have a thing for TypeScript üòÄ.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    },\n    __self: this\n  }, `JavaScript Utilities`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Lodash, Underscore, and jQuery. Don't use them anymore, the language has grown enough.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    },\n    __self: this\n  }, `CSS Frameworks/Libraries`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Skeleton, Semantic UI, Bootstrap 4, Foundation, and Materialize. Haven't really used them much.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Templating Engines`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Pug ‚ù§Ô∏è, Slim, and Handlebars. Mainly for small projects.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Preprocessors`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Sass, SCSS, Stylus, and PostCSS. I don't know where to put CSSModules but I use it all the time so ü§∑‚Äç‚ôÇ.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    },\n    __self: this\n  }, `UI Frameworks and State Management`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    },\n    __self: this\n  }, `React ‚ù§Ô∏è, Redux, and messed around with Vue just a tad bit.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    },\n    __self: this\n  }, `CSS-in-JS`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Glamorous/Emotion, and Styled Components. Not a fan of CSS-in-JS\nthough.üôÖ`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Build Tools and Transpilers`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Babel, Webpack ‚ù§Ô∏è, Gulp.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Databases and Cache`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    },\n    __self: this\n  }, `MongoDB ‚ù§Ô∏è, Firebase Firestore, Redis.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Server-Side and Serverless Technologies`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Mongoose, NodeJS, Express, GraphQL, Firebase Functions, and SocketIO.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Static Site Generators and CMS`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    },\n    __self: this\n  }, `GatsbyJS, NetlifyCMS`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Deployment, and CI/CD`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    },\n    __self: this\n  }, `GatsbyJS, Heroku, Netlify ‚ù§Ô∏è, Firebase, Git/GitHub, and TravisCI.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Testing`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Jest ‚ù§Ô∏è, Enzyme, and Cypress.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Design and UI/UX Tools`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Adobe Illustrator, Adobe Photoshop, Adobe XD, Figma ‚ù§Ô∏è, and Zeplin.`), mdx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Development Environment`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    },\n    __self: this\n  }, `This is my development environment setup. Tools I use to be productive,\nall around.`), mdx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Editor + Terminal üë®‚Äçüíª`), mdx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"[Visual Studio Code]\"), \" is my current editor. It allows a lot of customisation. I'm using\", mdx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"Shades of Purple\"), \"as my main theme and sometimes switch to\", mdx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"GitHub Light\"), \". My main fonts are Space Mono and FiraCode, currently using the former.\", mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Firefox is my main, and I use Chrome for testing alongside Firefox.`), mdx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"Cmder\"), \" is my terminal of choice with custom theme and\", mdx(\"a\", {\n    href: \"https://github.com/AmrEldib/cmder-powerline-prompt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"integrations\"), \". #### Productivity\", mdx(\"span\", {\n    \"aria-label\": \"muscle arm emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"\\uD83D\\uDCAA\"), mdx(\"a\", {\n    href: \"https://www.notion.so/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"Notion\"), \" is my main editorial app. Blog post drafts, to-do, and channel-related stuff. In terms of project management my tool of choice is\", mdx(\"a\", {\n    href: \"https://www.notion.so/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"Trello\"), \". As for time-tracking, I use a tool that I built myself called\", mdx(\"a\", {\n    href: \"https://auditmyday.netlify.app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"AuditMyDay\"), \". Anything else? Probably have a bash/node script for it. #### Recording + Editing\", mdx(\"span\", {\n    \"aria-label\": \"laptop emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    },\n    __self: this\n  }, \"\\uD83D\\uDCF9\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    },\n    __self: this\n  }, `I mainly use OBS to record any and all videos, and use Vegas Pro 17 as my\neditor.`), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    },\n    __self: this\n  }, `Photoshop is used to make thumbnails as well as Figma.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["D:/Workspace/Maintaining/iamnabil/pages/uses.mdx"],"names":["React","mdx","SEO","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport SEO from '../components/SEO'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <SEO path='/toolset' title='Toolset' mdxType=\"SEO\" />\n    <h1>{`Work and Experiments`}</h1>\n    <p>{`This is a list of all the tools I'm actively using, have used before, or have learned but haven't had the chance to use in a real world project yet. I currently have a thing for TypeScript üòÄ.`}</p>\n    <h4>{`JavaScript Utilities`}</h4>\n    <p>{`Lodash, Underscore, and jQuery. Don't use them anymore, the language has grown enough.`}</p>\n    <h4>{`CSS Frameworks/Libraries`}</h4>\n    <p>{`Skeleton, Semantic UI, Bootstrap 4, Foundation, and Materialize. Haven't really used them much.`}</p>\n    <h4>{`Templating Engines`}</h4>\n    <p>{`Pug ‚ù§Ô∏è, Slim, and Handlebars. Mainly for small projects.`}</p>\n    <h4>{`Preprocessors`}</h4>\n    <p>{`Sass, SCSS, Stylus, and PostCSS. I don't know where to put CSSModules but I use it all the time so ü§∑‚Äç‚ôÇ.`}</p>\n    <h4>{`UI Frameworks and State Management`}</h4>\n    <p>{`React ‚ù§Ô∏è, Redux, and messed around with Vue just a tad bit.`}</p>\n    <h4>{`CSS-in-JS`}</h4>\n    <p>{`Glamorous/Emotion, and Styled Components. Not a fan of CSS-in-JS\nthough.üôÖ`}</p>\n    <h4>{`Build Tools and Transpilers`}</h4>\n    <p>{`Babel, Webpack ‚ù§Ô∏è, Gulp.`}</p>\n    <h4>{`Databases and Cache`}</h4>\n    <p>{`MongoDB ‚ù§Ô∏è, Firebase Firestore, Redis.`}</p>\n    <h4>{`Server-Side and Serverless Technologies`}</h4>\n    <p>{`Mongoose, NodeJS, Express, GraphQL, Firebase Functions, and SocketIO.`}</p>\n    <h4>{`Static Site Generators and CMS`}</h4>\n    <p>{`GatsbyJS, NetlifyCMS`}</p>\n    <h4>{`Deployment, and CI/CD`}</h4>\n    <p>{`GatsbyJS, Heroku, Netlify ‚ù§Ô∏è, Firebase, Git/GitHub, and TravisCI.`}</p>\n    <h4>{`Testing`}</h4>\n    <p>{`Jest ‚ù§Ô∏è, Enzyme, and Cypress.`}</p>\n    <h4>{`Design and UI/UX Tools`}</h4>\n    <p>{`Adobe Illustrator, Adobe Photoshop, Adobe XD, Figma ‚ù§Ô∏è, and Zeplin.`}</p>\n    <h1>{`Development Environment`}</h1>\n    <p>{`This is my development environment setup. Tools I use to be productive,\nall around.`}</p>\n    <h4>{`Editor + Terminal üë®‚Äçüíª`}</h4>\n    <a href=''>[Visual Studio Code]</a> is my\ncurrent editor. It allows a lot of customisation.\nI'm using\n    <a href=''>\n\tShades of Purple\n    </a>\nas my main theme and sometimes switch to\n    <a href=''>\n\tGitHub Light\n    </a>\n.\nMy main fonts are Space Mono and FiraCode, currently using the former.\n    <p>{`Firefox is my main, and I use Chrome for testing alongside Firefox.`}</p>\n    <a href=''>Cmder</a> is my terminal of choice with\ncustom theme and\n    <a href='https://github.com/AmrEldib/cmder-powerline-prompt'>integrations</a>\n. ####\nProductivity\n    <span aria-label='muscle arm emoji' role='img'>\n\tüí™\n    </span>\n    <a href='https://www.notion.so/'>Notion</a> is my main editorial app. Blog\npost drafts, to-do, and channel-related stuff.\nIn terms of project management my tool of choice is\n    <a href='https://www.notion.so/'>Trello</a>.\nAs for time-tracking, I use a tool that I built myself called\n    <a href='https://auditmyday.netlify.app'>AuditMyDay</a>.\nAnything else? Probably have a bash/node script for it. ####\nRecording + Editing\n    <span aria-label='laptop emoji' role='img'>\n\tüìπ\n    </span>\n    <p>{`I mainly use OBS to record any and all videos, and use Vegas Pro 17 as my\neditor.`}</p>\n    <p>{`Photoshop is used to make thumbnails as well as Figma.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}