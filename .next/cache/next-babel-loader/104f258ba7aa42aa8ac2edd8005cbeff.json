{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Maintaining\\\\iamnabil\\\\pages\\\\blog\\\\[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nexport default function Post({\n  content,\n  frontmatter\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\nexport async function getStaticPaths() {\n  const files = fs.readdirSync('blog');\n  const paths = files.map(filename => ({\n    params: {\n      slug: filename.replace('.md', '')\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const markdownWithMetadata = fs.readFileSync(path.join('blog', params.slug + '.md')).toString();\n  const {\n    data,\n    content\n  } = matter(markdownWithMetadata);\n  console.log(data);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const formattedDate = data.date.toLocaleDateString('en-US', options);\n\n  const frontmatter = _objectSpread(_objectSpread({}, data), {}, {\n    date: formattedDate\n  });\n\n  return {\n    props: {\n      content: `# ${data.title}\\n${content}`,\n      frontmatter\n    }\n  };\n}","map":{"version":3,"sources":["D:/Workspace/Maintaining/iamnabil/pages/blog/[slug].js"],"names":["React","fs","path","matter","Post","content","frontmatter","getStaticPaths","files","readdirSync","paths","map","filename","params","slug","replace","fallback","getStaticProps","markdownWithMetadata","readFileSync","join","toString","data","console","log","options","year","month","day","formattedDate","date","toLocaleDateString","props","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAd,EAAwC;AACtD,sBACC,QAAC,MAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,KAAK,GAAGP,EAAE,CAACQ,WAAH,CAAe,MAAf,CAAd;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAUC,QAAQ,KAAK;AACpCC,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAEF,QAAQ,CAACG,OAAT,CAAiB,KAAjB,EAAwB,EAAxB;AADC;AAD4B,GAAL,CAAlB,CAAd;AAMA,SAAO;AACNL,IAAAA,KADM;AAENM,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAChD,QAAMK,oBAAoB,GAAGjB,EAAE,CAC7BkB,YAD2B,CACdjB,IAAI,CAACkB,IAAL,CAAU,MAAV,EAAkBP,MAAM,CAACC,IAAP,GAAc,KAAhC,CADc,EAE3BO,QAF2B,EAA7B;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQjB,IAAAA;AAAR,MAAoBF,MAAM,CAACe,oBAAD,CAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE,MAA1B;AAAkCC,IAAAA,GAAG,EAAE;AAAvC,GAAhB;AACA,QAAMC,aAAa,GAAGP,IAAI,CAACQ,IAAL,CAAUC,kBAAV,CAA6B,OAA7B,EAAsCN,OAAtC,CAAtB;;AAEA,QAAMnB,WAAW,mCACbgB,IADa;AAEhBQ,IAAAA,IAAI,EAAED;AAFU,IAAjB;;AAKA,SAAO;AACNG,IAAAA,KAAK,EAAE;AACN3B,MAAAA,OAAO,EAAG,KAAIiB,IAAI,CAACW,KAAM,KAAI5B,OAAQ,EAD/B;AAENC,MAAAA;AAFM;AADD,GAAP;AAMA","sourcesContent":["import React from 'react'\nimport fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nexport default function Post({ content, frontmatter }) {\n\treturn (\n\t\t<Layout>\n\t\t\t<article></article>\n\t\t</Layout>\n\t)\n}\n\nexport async function getStaticPaths() {\n\tconst files = fs.readdirSync('blog')\n\n\tconst paths = files.map(filename => ({\n\t\tparams: {\n\t\t\tslug: filename.replace('.md', '')\n\t\t}\n\t}))\n\n\treturn {\n\t\tpaths,\n\t\tfallback: false\n\t}\n}\n\nexport async function getStaticProps({ params }) {\n\tconst markdownWithMetadata = fs\n\t\t.readFileSync(path.join('blog', params.slug + '.md'))\n\t\t.toString()\n\n\tconst { data, content } = matter(markdownWithMetadata)\n\n\tconsole.log(data)\n\tconst options = { year: 'numeric', month: 'long', day: 'numeric' }\n\tconst formattedDate = data.date.toLocaleDateString('en-US', options)\n\n\tconst frontmatter = {\n\t\t...data,\n\t\tdate: formattedDate\n\t}\n\n\treturn {\n\t\tprops: {\n\t\t\tcontent: `# ${data.title}\\n${content}`,\n\t\t\tfrontmatter\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}